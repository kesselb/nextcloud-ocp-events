<?php

declare(strict_types=1);

/**
 * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
class ReStructuredTextFormatter {
	/**
	 * @param EventClass[] $events
	 */
	public function format(array $events): string {
		$output = '.. This file is generated by nextcloud-ocp-events.' . PHP_EOL;
		$output .= '.. Always change the source file.' . PHP_EOL;
		$output .= PHP_EOL;

		foreach ($events as $event) {
			$output .= '``' . $event->className . '``' . PHP_EOL;
			$output .= str_repeat('*', strlen($event->className) + 4) . PHP_EOL;
			$output .= PHP_EOL;

			foreach ($event->sinceTags as $i => $sinceTag) {
				if ($i === 0) {
					$output .= '.. versionadded:: ' . $this->adjustVersion($sinceTag['version']) . PHP_EOL;
					if (strlen($sinceTag['description']) > 0) {
						$output .= '   ' . $sinceTag['description'] . PHP_EOL;
					}
				} else {
					$output .= '.. versionchanged:: ' . $sinceTag['version'] . PHP_EOL;
					if (strlen($sinceTag['description']) > 0) {
						$output .= '   ' . $sinceTag['description'] . PHP_EOL;
					}
				}
				$output .= PHP_EOL;
			}

			if (strlen($event->summary) > 0) {
				$output .= $event->summary . PHP_EOL;
			}

			if (strlen($event->description) > 0) {
				$output .= $event->description . PHP_EOL;
			}

			$output .= PHP_EOL;

		}

		return $output;
	}

	private function adjustVersion(string $version): string {
		return preg_replace("/(\.0\.0|\.0)$/", '', $version);
	}
}
